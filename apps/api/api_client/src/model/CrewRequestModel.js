/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CrewRequestModel model module.
 * @module model/CrewRequestModel
 * @version 0.1.0
 */
class CrewRequestModel {
    /**
     * Constructs a new <code>CrewRequestModel</code>.
     * @alias module:model/CrewRequestModel
     * @param receiverId {String} 
     * @param prompt {Object} 
     * @param profileId {String} 
     * @param edges {Array.<Object>} 
     * @param published {Boolean} 
     * @param title {String} 
     * @param description {String} 
     * @param nodes {Array.<Object>} 
     */
    constructor(receiverId, prompt, profileId, edges, published, title, description, nodes) { 
        
        CrewRequestModel.initialize(this, receiverId, prompt, profileId, edges, published, title, description, nodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, receiverId, prompt, profileId, edges, published, title, description, nodes) { 
        obj['receiver_id'] = receiverId;
        obj['prompt'] = prompt;
        obj['profile_id'] = profileId;
        obj['edges'] = edges;
        obj['published'] = published;
        obj['title'] = title;
        obj['description'] = description;
        obj['nodes'] = nodes;
    }

    /**
     * Constructs a <code>CrewRequestModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrewRequestModel} obj Optional instance to populate.
     * @return {module:model/CrewRequestModel} The populated <code>CrewRequestModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrewRequestModel();

            if (data.hasOwnProperty('receiver_id')) {
                obj['receiver_id'] = ApiClient.convertToType(data['receiver_id'], 'String');
            }
            if (data.hasOwnProperty('prompt')) {
                obj['prompt'] = ApiClient.convertToType(data['prompt'], Object);
            }
            if (data.hasOwnProperty('profile_id')) {
                obj['profile_id'] = ApiClient.convertToType(data['profile_id'], 'String');
            }
            if (data.hasOwnProperty('edges')) {
                obj['edges'] = ApiClient.convertToType(data['edges'], [Object]);
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CrewRequestModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CrewRequestModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CrewRequestModel.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['receiver_id'] && !(typeof data['receiver_id'] === 'string' || data['receiver_id'] instanceof String)) {
            throw new Error("Expected the field `receiver_id` to be a primitive type in the JSON string but got " + data['receiver_id']);
        }
        // ensure the json data is a string
        if (data['profile_id'] && !(typeof data['profile_id'] === 'string' || data['profile_id'] instanceof String)) {
            throw new Error("Expected the field `profile_id` to be a primitive type in the JSON string but got " + data['profile_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['edges'])) {
            throw new Error("Expected the field `edges` to be an array in the JSON data but got " + data['edges']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['nodes'])) {
            throw new Error("Expected the field `nodes` to be an array in the JSON data but got " + data['nodes']);
        }

        return true;
    }


}

CrewRequestModel.RequiredProperties = ["receiver_id", "prompt", "profile_id", "edges", "published", "title", "description", "nodes"];

/**
 * @member {String} receiver_id
 */
CrewRequestModel.prototype['receiver_id'] = undefined;

/**
 * @member {Object} prompt
 */
CrewRequestModel.prototype['prompt'] = undefined;

/**
 * @member {String} profile_id
 */
CrewRequestModel.prototype['profile_id'] = undefined;

/**
 * @member {Array.<Object>} edges
 */
CrewRequestModel.prototype['edges'] = undefined;

/**
 * @member {Boolean} published
 */
CrewRequestModel.prototype['published'] = undefined;

/**
 * @member {String} title
 */
CrewRequestModel.prototype['title'] = undefined;

/**
 * @member {String} description
 */
CrewRequestModel.prototype['description'] = undefined;

/**
 * @member {Array.<Object>} nodes
 */
CrewRequestModel.prototype['nodes'] = undefined;






export default CrewRequestModel;

