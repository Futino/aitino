/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AgentModel model module.
 * @module model/AgentModel
 * @version 0.1.0
 */
class AgentModel {
    /**
     * Constructs a new <code>AgentModel</code>.
     * @alias module:model/AgentModel
     * @param id {String} 
     * @param title {String} 
     * @param role {String} 
     * @param systemMessage {String} 
     * @param tools {Array.<Object>} 
     * @param model {module:model/AgentModel.ModelEnum} 
     */
    constructor(id, title, role, systemMessage, tools, model) { 
        
        AgentModel.initialize(this, id, title, role, systemMessage, tools, model);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, role, systemMessage, tools, model) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['role'] = role;
        obj['system_message'] = systemMessage;
        obj['tools'] = tools;
        obj['model'] = model;
    }

    /**
     * Constructs a <code>AgentModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AgentModel} obj Optional instance to populate.
     * @return {module:model/AgentModel} The populated <code>AgentModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AgentModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('system_message')) {
                obj['system_message'] = ApiClient.convertToType(data['system_message'], 'String');
            }
            if (data.hasOwnProperty('tools')) {
                obj['tools'] = ApiClient.convertToType(data['tools'], [Object]);
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AgentModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AgentModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AgentModel.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['system_message'] && !(typeof data['system_message'] === 'string' || data['system_message'] instanceof String)) {
            throw new Error("Expected the field `system_message` to be a primitive type in the JSON string but got " + data['system_message']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tools'])) {
            throw new Error("Expected the field `tools` to be an array in the JSON data but got " + data['tools']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }

        return true;
    }


}

AgentModel.RequiredProperties = ["id", "title", "role", "system_message", "tools", "model"];

/**
 * @member {String} id
 */
AgentModel.prototype['id'] = undefined;

/**
 * @member {String} title
 */
AgentModel.prototype['title'] = undefined;

/**
 * @member {String} role
 */
AgentModel.prototype['role'] = undefined;

/**
 * @member {String} system_message
 */
AgentModel.prototype['system_message'] = undefined;

/**
 * @member {Array.<Object>} tools
 */
AgentModel.prototype['tools'] = undefined;

/**
 * @member {module:model/AgentModel.ModelEnum} model
 */
AgentModel.prototype['model'] = undefined;





/**
 * Allowed values for the <code>model</code> property.
 * @enum {String}
 * @readonly
 */
AgentModel['ModelEnum'] = {

    /**
     * value: "gpt-3.5-turbo"
     * @const
     */
    "3.5-turbo": "gpt-3.5-turbo",

    /**
     * value: "gpt-4-turbo-preview"
     * @const
     */
    "4-turbo-preview": "gpt-4-turbo-preview"
};



export default AgentModel;

