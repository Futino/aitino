/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RunRequestModel model module.
 * @module model/RunRequestModel
 * @version 0.1.0
 */
class RunRequestModel {
    /**
     * Constructs a new <code>RunRequestModel</code>.
     * @alias module:model/RunRequestModel
     * @param id {String} 
     * @param profileId {String} 
     */
    constructor(id, profileId) { 
        
        RunRequestModel.initialize(this, id, profileId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, profileId) { 
        obj['id'] = id;
        obj['profile_id'] = profileId;
    }

    /**
     * Constructs a <code>RunRequestModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunRequestModel} obj Optional instance to populate.
     * @return {module:model/RunRequestModel} The populated <code>RunRequestModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunRequestModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('profile_id')) {
                obj['profile_id'] = ApiClient.convertToType(data['profile_id'], 'String');
            }
            if (data.hasOwnProperty('session_title')) {
                obj['session_title'] = ApiClient.convertToType(data['session_title'], 'String');
            }
            if (data.hasOwnProperty('session_id')) {
                obj['session_id'] = ApiClient.convertToType(data['session_id'], 'String');
            }
            if (data.hasOwnProperty('reply')) {
                obj['reply'] = ApiClient.convertToType(data['reply'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunRequestModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunRequestModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RunRequestModel.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['profile_id'] && !(typeof data['profile_id'] === 'string' || data['profile_id'] instanceof String)) {
            throw new Error("Expected the field `profile_id` to be a primitive type in the JSON string but got " + data['profile_id']);
        }
        // ensure the json data is a string
        if (data['session_title'] && !(typeof data['session_title'] === 'string' || data['session_title'] instanceof String)) {
            throw new Error("Expected the field `session_title` to be a primitive type in the JSON string but got " + data['session_title']);
        }
        // ensure the json data is a string
        if (data['session_id'] && !(typeof data['session_id'] === 'string' || data['session_id'] instanceof String)) {
            throw new Error("Expected the field `session_id` to be a primitive type in the JSON string but got " + data['session_id']);
        }
        // ensure the json data is a string
        if (data['reply'] && !(typeof data['reply'] === 'string' || data['reply'] instanceof String)) {
            throw new Error("Expected the field `reply` to be a primitive type in the JSON string but got " + data['reply']);
        }

        return true;
    }


}

RunRequestModel.RequiredProperties = ["id", "profile_id"];

/**
 * @member {String} id
 */
RunRequestModel.prototype['id'] = undefined;

/**
 * @member {String} profile_id
 */
RunRequestModel.prototype['profile_id'] = undefined;

/**
 * @member {String} session_title
 * @default 'Untitled'
 */
RunRequestModel.prototype['session_title'] = 'Untitled';

/**
 * @member {String} session_id
 */
RunRequestModel.prototype['session_id'] = undefined;

/**
 * @member {String} reply
 */
RunRequestModel.prototype['reply'] = undefined;






export default RunRequestModel;

